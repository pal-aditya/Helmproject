apiVersion: apps/v1
kind: Deployment
metadata:
#  creationTimestamp: null
  namespace: {{ .Values.deployment.frontend.namespace }}
  labels:
    app: {{ .Values.deployment.frontend.labels.app }}
  name: {{ .Values.deployment.frontend.name }}
spec:
  replicas: {{ .Values.deployment.frontend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.frontend.labels.app }}
  strategy:
    type: {{ .Values.deployment.frontend.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.frontend.strategy.maxSurge }}     #How many extra pods can be deployed
      maxUnavailable: {{ .Values.deployment.frontend.strategy.maxUnavailable }} #How many max pods can be deleted
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.deployment.frontend.labels.app }}
    spec:
      containers:
      - image: {{ .Values.deployment.frontend.image.repository }}:{{ .Values.deployment.frontend.image.tag }}
        name: {{ .Values.deployment.frontend.container.name }}
        imagePullPolicy: {{ .Values.deployment.frontend.container.imagePullPolicy }}
        ports:
          - containerPort: {{ .Values.deployment.frontend.container.ports }}
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: frontend-nginx-config
#status: {}
